plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.latte'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2' // SWAGGER
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2' // SWAGGER
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'com.querydsl', name: 'querydsl-jpa' // QueryDsl
    implementation group: 'com.querydsl', name: 'querydsl-apt' // QueryDsl
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'junit:junit:4.13.1'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}

configure("querydsl-sample") {
    apply plugin: "io.spring.dependency-management"

    dependencies {
        implementation("com.querydsl:querydsl-core")
        implementation("com.querydsl:querydsl-jpa")

        annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
        annotationProcessor("jakarta.persistence:jakarta.persistence-api")
        annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    }

    clean {
        delete file('src/main/generated')
    }
}
